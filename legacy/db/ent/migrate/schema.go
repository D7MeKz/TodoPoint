// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MembersColumns holds the columns for the "members" table.
	MembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// MembersTable holds the schema information for the "members" table.
	MembersTable = &schema.Table{
		Name:       "members",
		Columns:    MembersColumns,
		PrimaryKey: []*schema.Column{MembersColumns[0]},
	}
	// PointsColumns holds the columns for the "points" table.
	PointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "point", Type: field.TypeInt},
		{Name: "type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "point_info_points", Type: field.TypeInt, Nullable: true},
		{Name: "sub_task_point", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "task_point", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// PointsTable holds the schema information for the "points" table.
	PointsTable = &schema.Table{
		Name:       "points",
		Columns:    PointsColumns,
		PrimaryKey: []*schema.Column{PointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "points_point_infos_points",
				Columns:    []*schema.Column{PointsColumns[4]},
				RefColumns: []*schema.Column{PointInfosColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "points_sub_tasks_point",
				Columns:    []*schema.Column{PointsColumns[5]},
				RefColumns: []*schema.Column{SubTasksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "points_tasks_point",
				Columns:    []*schema.Column{PointsColumns[6]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PointInfosColumns holds the columns for the "point_infos" table.
	PointInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "total_points", Type: field.TypeInt64},
		{Name: "modified_at", Type: field.TypeTime},
		{Name: "member_point_info", Type: field.TypeInt, Nullable: true},
	}
	// PointInfosTable holds the schema information for the "point_infos" table.
	PointInfosTable = &schema.Table{
		Name:       "point_infos",
		Columns:    PointInfosColumns,
		PrimaryKey: []*schema.Column{PointInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "point_infos_members_point_info",
				Columns:    []*schema.Column{PointInfosColumns[3]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SubTasksColumns holds the columns for the "sub_tasks" table.
	SubTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "task_subtask", Type: field.TypeInt, Nullable: true},
	}
	// SubTasksTable holds the schema information for the "sub_tasks" table.
	SubTasksTable = &schema.Table{
		Name:       "sub_tasks",
		Columns:    SubTasksColumns,
		PrimaryKey: []*schema.Column{SubTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sub_tasks_tasks_subtask",
				Columns:    []*schema.Column{SubTasksColumns[1]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "total_status", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "modified_at", Type: field.TypeTime},
		{Name: "member_tasks", Type: field.TypeInt, Nullable: true},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tasks_members_tasks",
				Columns:    []*schema.Column{TasksColumns[5]},
				RefColumns: []*schema.Column{MembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MembersTable,
		PointsTable,
		PointInfosTable,
		SubTasksTable,
		TasksTable,
	}
)

func init() {
	PointsTable.ForeignKeys[0].RefTable = PointInfosTable
	PointsTable.ForeignKeys[1].RefTable = SubTasksTable
	PointsTable.ForeignKeys[2].RefTable = TasksTable
	PointInfosTable.ForeignKeys[0].RefTable = MembersTable
	SubTasksTable.ForeignKeys[0].RefTable = TasksTable
	TasksTable.ForeignKeys[0].RefTable = MembersTable
}
