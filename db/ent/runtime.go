// Code generated by ent, DO NOT EDIT.

package ent

import (
	"common/db/ent/member"
	"common/db/ent/point"
	"common/db/ent/pointinfo"
	"common/db/ent/schema"
	"common/db/ent/task"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	memberFields := schema.Member{}.Fields()
	_ = memberFields
	// memberDescCreatedAt is the schema descriptor for created_at field.
	memberDescCreatedAt := memberFields[4].Descriptor()
	// member.DefaultCreatedAt holds the default value on creation for the created_at field.
	member.DefaultCreatedAt = memberDescCreatedAt.Default.(time.Time)
	pointFields := schema.Point{}.Fields()
	_ = pointFields
	// pointDescCreatedAt is the schema descriptor for created_at field.
	pointDescCreatedAt := pointFields[3].Descriptor()
	// point.DefaultCreatedAt holds the default value on creation for the created_at field.
	point.DefaultCreatedAt = pointDescCreatedAt.Default.(time.Time)
	pointinfoFields := schema.PointInfo{}.Fields()
	_ = pointinfoFields
	// pointinfoDescModifiedAt is the schema descriptor for modified_at field.
	pointinfoDescModifiedAt := pointinfoFields[2].Descriptor()
	// pointinfo.DefaultModifiedAt holds the default value on creation for the modified_at field.
	pointinfo.DefaultModifiedAt = pointinfoDescModifiedAt.Default.(time.Time)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[3].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(time.Time)
	// taskDescModifiedAt is the schema descriptor for modified_at field.
	taskDescModifiedAt := taskFields[4].Descriptor()
	// task.DefaultModifiedAt holds the default value on creation for the modified_at field.
	task.DefaultModifiedAt = taskDescModifiedAt.Default.(time.Time)
}
